@import "../assets/shared";

.hidden {
  display: none !important;
}

:root {
  --top-actions-height: 3rem;
}

@media (prefers-color-scheme: light) {
  :root {
    --foreground-color: var(--ff-grey-90);
    --foreground-secondary: var(--ff-grey-70);

    --background-color: var(--ff-grey-10);
    --background-secondary: var(--ff-grey-30);

    --item-title-foreground-color: var(--foreground-color);
    --item-url-foreground-color: var(--foreground-secondary);

    --current-page-background-color: white;
    --current-page-border-color: var(--ff-ink-70);

    --tag-background-color: var(--ff-grey-20);
    --tag-border-color: var(--foreground-color);
    --tag-color: var(--foreground-secondary);

    --actions-container-background-color-rgb: var(--ff-grey-20-rgb);
    --actions-container-border-color: var(--ff-grey-20);
    --actions-icon-color: var(--ff-grey-90);
    --favorite-action: #fce158;
    --edit-action-rgb: var(--ff-ink-70-rgb);

    --input-border-color: var(--ff-grey-30);
    --input-background-color: var(--background-color);

    --clear-search-box-color: var(--ff-grey-40);
    --clear-search-box-background-color: var(--background-color);

    --favorite-bg: #f9e890;
    --favorite-bg-rgb: 249,232,144;

    --outline-color: var(--ff-blue-70);
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --custom-ink: #8791EB;
    --custom-ink-rgb: 135,145,235;

    --foreground-color: var(--ff-grey-10);
    --foreground-secondary: var(--ff-grey-30);

    --background-color: var(--ff-grey-80);
    --background-secondary: var(--ff-grey-60);

    --item-title-foreground-color: var(--foreground-color);
    --item-url-foreground-color: var(--foreground-secondary);

    --current-page-background-color: var(--ff-grey-90);
    --current-page-border-color: var(--ff-grey-30);

    --tag-background-color: var(--ff-grey-70);
    --tag-border-color: var(--foreground-color);
    --tag-color: var(--foreground-color);

    --actions-container-background-color-rgb: var(--ff-grey-60-rgb);
    --actions-container-border-color: var(--ff-grey-60);
    --actions-icon-color: var(--foreground-color);
    --favorite-action: #fce158;
    --edit-action-rgb: var(--custom-ink-rgb);

    --input-border-color: var(--ff-grey-60);
    --input-background-color: var(--background-secondary);

    --clear-search-box-color: var(--ff-grey-40);
    --clear-search-box-background-color: var(--background-color);

    --favorite-bg: #f9e890;
    --favorite-bg-rgb: 249,232,144;

    --outline-color: var(--ff-blue-40);
  }
}


html {
  min-height: 300px;

  &.sidebar {
    height: 100%;
  }
}

body {
  width: 500px;
  height: 550px;

  font-size: 12px;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family: sans-serif;
  background-color: var(--background-color);

  /* NOTE: used to set flex: 1 for direct descendants but it generated a bug for Firefox < 83 */
  display: flex;

  &.sidebar {
    height: 100%;
    width: 100%;

    .authenticated,
    .authentication {
      height: 100%;
      width: 100%;
    }
  }
}

.authenticated, .authentication {
  height: 100%;
  width: 100%;

  display: flex;
  flex-direction: column;
}

.authentication {
  justify-content: space-between;
  align-items: center;

  button {
    margin: 3rem;
    padding: 1rem 2rem;
    background-color: var(--ff-blue-50);
    border-width: 0px;
    border-radius: 8px;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;

    max-width: 80%;

    &:hover {
      background-color: var(--ff-blue-60);
    }

    &:active {
      background-color: var(--ff-blue-70);
    }
  }

  .bottom {
    margin: 2rem;
    width: 80%;
    color: var(--ff-grey-50);
    font-size: 1.1rem;

    a {
      color: var(--ff-grey-50);
      &:hover {
        color: var(--ff-blue-70);
      }
    }
  }
}

.items-list {
  flex: 1;

  width: 100%;
  margin: 0;
  padding: 0;
  list-style-type: none;
  overflow-y: scroll;

  /* Move up since the main-loader is 2px high and is moved up on 2px
   * (onto the top-actions container) */
  position: relative;
  top: -2px;

  .item {
    /* Only renders the item when they need to be rendered. Should improve perfs
     * for the rendering of long item lists
     * NOTE: not sure how it behaves regarding image loading */
    content-visibility: auto;

    margin: 0;
    position: relative;
    padding: 0.5rem;
    border-bottom: 1px solid var(--background-secondary);
    color: var(--foreground-color);

    /* Item height used to be 3.5rem, fixed, for animation
     * I'm no longer fixing the height but to animate disappearance, I rely on max-height
     * https://css-tricks.com/using-css-transitions-auto-dimensions/ */
    max-height: 6rem;

    display: flex;
    flex-direction: column;
    justify-content: space-evenly;

    &.favorite {
      background-color: rgba(var(--favorite-bg-rgb), 0.8);
      color: var(--ff-grey-90);

      /* NOTE: these overrides are needed as long as I use the same background-color for light and dark themes */
      .favicon-and-title .title { color: var(--ff-grey-90); }
      .url-and-tags .url { color: var(--ff-grey-70); }
    }

    &.current-page {
      background-color: var(--current-page-background-color);
      &.favorite {
        background-color: var(--favorite-bg);
      }

      border: 2px double var(--current-page-border-color);
      border-radius: 4px;
      margin: 0.2rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      font-weight: bold;

      .tab-icon {
        height: 20px;
        width: 20px;
        bottom: 2px;
      }
    }


    & > span {
      margin-left: 0.5rem;
    }

    .favicon-and-title {
      display: flex;
      align-items: center;

      /* FIXME: how can I CSS the stroke color for the tab-icon ? */
      .favicon, .tab-icon {
        height: 16px;
        width: 16px;
        margin-right: 0.5rem;
        vertical-align: middle;
        position: relative;
        border-radius: 2px;
      }

      .title {
        flex: 1;
        display: inline-block;

        line-height: calc(1.25rem + 6px);
        font-size: 1.25rem;
        /* So that editing the title doesn't move items around, span.title being the exact
         * same height as the input + buttons */
        padding: 0.3rem 0px;

        color: var(--item-title-foreground-color);
        user-select: text;
        white-space: nowrap;
        overflow-x: hidden;
        text-overflow: ellipsis;

        cursor: pointer;
      }
    }

    .url-and-tags {
      position: relative;
      display: flex;

      /* Prevent scrolling from being enabled on items with tags */
      overflow-y: hidden;

      font-size: 0.9rem;

      .url {
        flex: 1;
        display: inline-block;
        padding: 0.2rem 0px;

        overflow: hidden;
        text-decoration: none;
        text-overflow: ellipsis;
        user-select: text;
        white-space: nowrap;

        color: var(--item-url-foreground-color);

        cursor: pointer;
      }

      .tags {
        flex: initial;

        .tag {
          margin-left: 0.5rem;
          .icon {
            margin-right: 0.2rem;
          }
        }
      }
    }

    overflow: hidden;
    opacity: 1;

    /* second duration is the delay after which the transition must begin
     * 'ease-out' timing function for max-height because I define a larger-than-the-item max-height,
     * so I need the transition to be fast at first and then come back to a normal speed */
    transition: max-height 250ms ease-out, padding 250ms, opacity 0s 200ms, border-bottom-width 0s 240ms;

    /* When the item is visually disappearing from the list
     * Relies on max-height since height is no longer fixed */
    &.disappearing {
      max-height: 0;
      margin-top: 0;
      margin-bottom: 0;
      padding: 0;
      opacity: 0;
      border-top-width: 0px;
      border-bottom-width: 0px;
    }

    &.editing {
      /* NOTE: very slightly reduce the item padding, to allow more vertical margin
       *       between the form inputs */
      padding: 0.45rem;
      gap: 0.3rem;

      .row {
        display: flex;
        flex-direction: row;
        gap: 0.3rem;

        label {
          display: block;
          /* For vertical-centering */
          line-height: 1.8rem;
          width: 3rem;
          height: 100%;
        }

        input.title {
          flex: 1;
          display: inline;
          cursor: text;
          font-size: 1rem;
          border: 1px solid var(--input-border-color);
          background: var(--input-background-color);
          color: var(--foreground-color);
          border-radius: 2px;
          padding: 1px;

          &:focus {
            outline: 2px solid var(--outline-color);
          }
        }

        /* Fake tag input field */
        .tags {
          flex: 1;

          padding: 2px;
          background: var(--input-background-color);
          border: 1px solid var(--input-border-color);
          border-radius: 2px;

          display: flex;
          flex-wrap: wrap;

          .tag {
            flex: initial;

            margin-right: 2px;
            margin-bottom: 1px;
            padding: 0px 2px;

            background-color: var(--tag-background-color);
            border: 1px solid var(--tag-border-color);
            border-radius: 2px;
            color: var(--tag-color);

            &:focus {
              border-color: var(--tag-background-color);
              outline: 2px solid var(--outline-color);
            }
          }

          /* Actual new tag input */
          input.new-tag {
            flex: 1;

            cursor: text;
            font-size: 1rem;
            border: 0px none;
            outline: none;

            background-color: transparent;
            color: var(--foreground-color);
          }

          /* Manually add the focused class to the whole tags container
           * when the new-tag field has the focus */
          /* TODO: auto does not work. How do I get the default outline color back? */
          &.focused {
            outline: 2px solid var(--outline-color);
          }
        }

        /* FIXME: adapt button color and background */
        button.cancel-edit,
        input.submit-edit[type='submit'] {
          display: inline;
          font-size: 1rem;

          /* Outlining with a solid border would make a rectangular outline
           * around the slightly rounded buttons, which looks plain ugly */
          &:focus {
            outline: none;
            box-shadow: 0px 0px 0px 1px var(--outline-color);
          }
        }
      }

    }

    /* Removing: when the "delete/archive" button has been clicked and the spinner is spinning,
     * we maintain the visibility of its actions container (so that user keep on seeing the
     * spinning spinner during the deletion) */
    &:hover .actions-container,
    &.removing .actions-container {
      opacity: 1;
      transition: opacity 300ms ease-out;
    }

    .actions-container {
      opacity: 0;
      transition: opacity 300ms ease-out;
      z-index: 1;

      position: absolute;
      top: 0;
      right: 0;
      width: 14rem;
      height: 100%;
      background-color: rgba(var(--actions-container-background-color-rgb), 0.8);
      border-left: 1px solid var(--actions-container-border-color);

      display: flex;
      flex-direction: row;

      .favorite-action,
      .edit-action,
      .tick-action,
      .delete-action {
        cursor: pointer;
        flex: 1;
        opacity: 0.8;

        /* So that tick/loader are automatically centered */
        display: flex;
        justify-content: center;
        align-items: center;

        &:hover {
          opacity: 1;
        }

        .icon {
          color: var(--actions-icon-color);
          font-size: 1.5rem;
        }

        --loader-size: 1.3rem;

        .loader {
          height: var(--loader-size);
          width: var(--loader-size);
          animation: rotate 0.8s infinite linear;
          border: 0.4rem solid var(--ff-grey-60);
          border-radius: 50%;
          border-right-color: transparent;
        }
      }

      .favorite-action:hover {
        background-color: var(--favorite-action);

        .icon {
          color: var(--ff-grey-90);
        }
      }

      .edit-action:hover {
        background-color: rgba(var(--edit-action-rgb), 0.5);
      }

      .tick-action:hover {
        background-color: rgba(var(--pocket-aqua-rgb), 0.6);
      }

      .delete-action:hover {
        background-color: rgba(var(--pocket-red-rgb), 0.6);
      }
    }
  }
}

.search-no-results,
.onboarding-never-fetched {
  flex: 1;
  margin: 0;
  padding: 2rem;
  text-align: center;

  font-size: 1.5rem;
  color: var(--foreground-color);

  p {
    text-align: left;
    font-size: 1.2rem;
  }
}

.top-actions {
  flex: initial;

  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.8rem;

  height: var(--top-actions-height);
  padding-left: 0.5rem;
  padding-right: 0.5rem;

  background-color: var(--background-secondary);
  color: var(--foreground-secondary);

  .top-icon {
    flex: initial;
    display: inline-block;
    cursor: pointer;
    font-size: 1.9rem;

    &:hover {
      color: var(--foreground-color);
    }

    &.random-item {
      font-weight: bold;
    }

    &.filter-faved {
      position: relative;

      &.on {
        .badge-on {
          display: block;
        }
      }
      &.off {
        .badge-off {
          display: block;
        }
      }

      .badge-wrapper {
        display: none;

        position: absolute;
        right: 0.2rem;
        bottom: 0.2rem;

        color: white;
        border-radius: 50% 50%;
        height: 1rem;
        width: 1rem;
        line-height: 1rem;
        font-size: 0.9rem;
        text-align: center;

        &.badge-on {
          background-color: var(--ff-green-60);
        }
        &.badge-off {
          background-color: var(--pocket-red);
        }
      }
    }
  }

  .filter-items-container {
    position: relative;
    flex: 1;
    margin-left: 1rem;
    margin-right: 1rem;

    .clear-search-box {
      position: absolute;
      top: -0.35rem;
      right: 0.15rem;
      color: var(--clear-search-box-color);
      font-size: 2.2rem;
      cursor: pointer;
    }

    input.filter-items {
      box-sizing: border-box;
      width: 100%;
      padding: 0.3rem 0.6rem;

      color: var(--foreground-color);
      background-color: var(--clear-search-box-background-color);
      border-radius: 1rem;
      border: 0px transparent;
      font-size: 1.15rem;

      &:focus {
        outline: 1px solid var(--outline-color);
      }
    }
  }
}

/* Thanks to Che for this example: http://codepen.io/code_dependant/pen/ciGLA?editors=1100 */
.main-loader {
  flex: initial;

  position: relative;
  top: -2px;
  height: 2px;
  width: 100%;
  background-color: transparent;

  &.loading:after {
    content: "";
    position: absolute;
    display: block;
    height: 100%;
    background-color: var(--pocket-aqua);
    left: 0%;
    right: 100%;

    animation: linear-loading 1.2s ease infinite;
  }
}

.flash-overlay {
  /* Needed to counter the 'display:none' of the .hidden class. Without this, the overlay
  * display goes from block to none, and is hidden all at once */
  display: block !important;

  z-index: 3;
  position: absolute;
  top: var(--top-actions-height);
  opacity: 1;
  transition: height 200ms ease-out, opacity 200ms ease-out;

  padding: 1rem;

  font-size: 1.2rem;
  line-height: 1.4;
  text-align: center;

  &.error {
    background-color: rgba(var(--ff-red-50-rgb), 0.9);
    color: white;
  }
  &.notice {
    background-color: rgba(var(--notice-blue-rgb), 0.9);
    color: var(--ff-grey-80);
  }
  &.success {
    background-color: rgba(var(--ff-green-60-rgb), 0.8);
    color: var(--ff-grey-80);
  }

  &.hidden {
    /* Needed to counter the 'display:none' of the .hidden class. Without this, the overlay
     * display goes from block to none, and is hidden all at once */
    display: block !important;

    height: 0px;
    opacity: 0;
    transition: height 250ms ease-out, opacity 0 250ms ease-out;

    /* Ensure the item really takes no space in the popup, or it will
     * prevent clicking on the first item of the list */
    padding: 0px;
    line-height: 0;
  }
}

.pagination {
  flex: initial;

  z-index: 2;

  height: 2.5rem;
  line-height: 2.5rem;

  display: flex;
  flex-direction: row;

  font-weight: bold;
  background: var(--background-secondary);
  color: var(--foreground-secondary);

  .pagination-previous,
  .pagination-next {
    flex: 1;
    text-align: center;
    cursor: pointer;

    &:hover {
      color: var(--foreground-color);
    }

    &.disabled,
    &.disabled:hover {
      opacity: 0.4;
    }
  }

  .pagination-page-selector {
    /* On popup opening, the selector is hidden */
    display: none;

    flex: initial;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    text-align: center;
  }
}

/* Dealing with the popup width in case it's pinned to overflow menu
 * Apparently, overflow menu width must be around 425px atm */

@media (max-width: 400px) {
  html, body {
    max-width: 100%;
  }
}

@import "../assets/shared";

.hidden {
  display: none !important;
}

// -----------

html {
  min-height: 300px;
  &.sidebar {
    height: 100%;
  }
}

body {
  width: 500px;
  height: 550px;

  font-size: 12px;
  padding: 0;
  margin: 0;
  overflow: hidden;
  font-family: sans-serif;
  background-color: $ff-grey-10;

  // NOTE: used to set flex: 1 for direct descendants but it generated a bug for Firefox < 83
  display: flex;

  &.sidebar {
    height: 100%;
    width: 100%;

    .authenticated,
    .authentication {
      height: 100%;
      width: 100%;
    }
  }
}

.authenticated, .authentication {
  height: 100%;
  width: 100%;

  display: flex;
  flex-direction: column;
}

.authentication {
  justify-content: space-between;
  align-items: center;

  button {
    margin: 2rem;
    padding: 1rem 2rem;
    background-color: $ff-blue-50;
    border: 1px solid;
    border-radius: 4px;
    color: white;
    font-size: 1.2rem;
    cursor: pointer;

    max-width: 80%;

    &:hover {
      background-color: $ff-blue-60;
    }

    &:active {
      background-color: $ff-blue-70;
    }
  }

  .bottom {
    margin: 2rem;
    width: 80%;
    color: $ff-secondary-text;

    a {
      color: $ff-secondary-text;
      &:hover {
        color: $ff-blue-70;
      }
    }
  }
}

.list-component {
  flex: 1;

  width: 100%;
  margin: 0;
  padding: 0;
  list-style-type: none;
  overflow-y: scroll;

  // Move up since the main-loader is 2px high and is moved up on 2px
  // (onto the top-actions container)
  position: relative;
  top: -2px;

  .item {
    margin: 0;
    position: relative;
    padding: 0.5rem;
    border-bottom: 1px solid $ff-grey-20;

    color: $ff-grey-70;

    // Item height used to be 3.5rem, fixed, for animation
    // I'm no longer fixing the height but to animate disappearance, I rely on max-height
    // https://css-tricks.com/using-css-transitions-auto-dimensions/
    max-height: 6rem;

    display: flex;
    flex-direction: column;
    justify-content: space-evenly;


    &.favorite {
      background-color: transparentize($favorite-bg, 0.2);
    }

    &.current-page {
      background-color: white;
      &.favorite {
        background-color: $favorite-bg;
      }

      border: 2px double $ff-ink-70;
      border-radius: 4px;
      margin: 0.2rem;
      padding-top: 0.5rem;
      padding-bottom: 0.5rem;
      font-weight: bold;
      box-shadow: 0px 2px 8px 0px $ff-grey-30;

      .tab-icon {
        height: 20px;
        width: 20px;
        bottom: 2px;
      }
    }


    & > span {
      margin-left: 0.5rem;
    }

    .favicon-and-title {
      display: flex;
      align-items: center;

      .favicon, .tab-icon {
        height: 16px;
        width: 16px;
        margin-right: 0.5rem;
        vertical-align: middle;
        position: relative;
        border-radius: 2px;
      }

      span.title {
        flex: 1;
        display: inline-block;

        line-height: calc(1.25rem + 2px);
        font-size: 1.25rem;
        // So that editing the title doesn't move items around, span.title being the exact
        // same height as the input + buttons
        padding: 0.2rem 0px;

        color: $ff-primary-text;
        user-select: text;
        white-space: nowrap;
        overflow-x: hidden;
        text-overflow: ellipsis;

        cursor: pointer;
      }

    }

    .url-and-tags {
      position: relative;
      display: flex;

      // Prevent scrolling from being enabled on items with tags
      overflow-y: hidden;

      font-size: 0.9rem;

      .url {
        flex: 1;
        display: inline-block;
        padding: 0.2rem 0px;

        overflow: hidden;
        text-decoration: none;
        text-overflow: ellipsis;
        user-select: text;
        white-space: nowrap;

        color: $ff-secondary-text;

        cursor: pointer;
      }

      .tags {
        flex: initial;

        .tag {
          margin-left: 0.5rem;
          .icon {
            margin-right: 0.2rem;
          }
        }
      }
    }

    &:hover .title {
      color: $ff-grey-90;
    }

    overflow: hidden;
    opacity: 1;

    // second duration is the delay after which the transition must begin
    // 'ease-out' timing function for max-height because I define a larger-than-the-item max-height,
    // so I need the transition to be fast at first and then come back to a normal speed
    transition: max-height 250ms ease-out, padding 250ms, opacity 0s 200ms, border-bottom-width 0s 240ms;

    // When the item is visually disappearing from the list
    // Relies on max-height since height is no longer fixed
    &.disappearing {
      max-height: 0;
      padding: 0;
      opacity: 0;
      border-bottom-width: 0px;
    }

    &.editing {
      .row {
        margin: 0.2rem;
        display: flex;
        flex-direction: row;

        label {
          display: inline-block;
          // // For vertical-centering
          // line-height: 2rem;
          width: 4rem;
        }

        input.title {
          flex: 1;
          display: inline;
          cursor: text;
          font-size: 1rem;
          border: 1px solid $ff-grey-40;
          border-radius: 2px;
          padding: 2px;
          margin-top: 1px; // so that the outline does not hit the upper item

          &:focus {
            outline: 1px solid $ff-blue-70;
          }
        }

        .tags {
          flex: 1;

          // I have to set a 1px padding-bottom for the spacing to be aligned, not sure what causes this
          padding: 2px 2px 1px 2px;

          border: 1px solid $ff-grey-40;
          border-radius: 2px;

          display: flex;
          flex-wrap: wrap;

          .tag {
            flex: initial;

            margin: 0.2rem 0.2rem 0.2rem 0;
            padding: 1px 3px;

            background-color: $ff-grey-20;
            border: 1px solid $ff-grey-40;
            border-radius: 2px;
            color: $ff-primary-text;

            &:focus {
              outline: 1px solid $ff-blue-70;
            }
          }

          input.new-tag {
            flex: 1;

            cursor: text;
            font-size: 1rem;
            border: 0px none;
            outline: none;
          }

          // Manually add the focused class to the whole tags container
          // when the new-tag field has the focus
          &.focused {
            outline: 1px solid $ff-blue-70;
          }
        }

        button.cancel-edit,
        input.submit-edit[type='submit'] {
          display: inline;
          margin-left: 0.2rem;
          margin-right: 0.2rem;
          font-size: 1rem;

          // Outlining with a solid border would make a rectangular outline
          // around the slightly rounded buttons, which looks plain ugly
          &:focus {
            outline: none;
            box-shadow: 0px 0px 0px 1px $ff-blue-70;
          }
        }
      }

    }

    // Removing: when the "delete/archive" button has been clicked and the spinner is spinning,
    // we maintain the visibility of its actions container (so that user keep on seeing the
    // spinning spinner during the deletion)
    &:hover .actions-container,
    &.removing .actions-container {
      opacity: 1;
      transition: opacity 300ms ease-out;
    }

    .actions-container {
      opacity: 0;
      transition: opacity 300ms ease-out;
      z-index: 1;

      position: absolute;
      top: 0;
      right: 0;
      width: 14rem;
      height: 100%;
      background-color: transparentize($ff-grey-20, 0.2);
      border-left: 1px solid $ff-grey-20;

      display: flex;
      flex-direction: row;

      .favorite-action,
      .edit-action,
      .tick-action,
      .delete-action {
        cursor: pointer;
        flex: 1;
        opacity: 0.8;

        // So that tick/loader are automatically centered
        display: flex;
        justify-content: center;
        align-items: center;

        &:hover {
          opacity: 1;
        }

        .icon {
          color: $ff-primary-text;
          font-size: 1.5rem;
        }

        $loader-size: 1.3rem;

        .loader {
          height: $loader-size;
          width: $loader-size;
          animation: rotate 0.8s infinite linear;
          border: 0.4rem solid $ff-grey-60;
          border-radius: 50%;
          border-right-color: transparent;
        }
      }

      .favorite-action:hover {
        background-color: $favorite-action;
      }

      .edit-action:hover {
        background-color: transparentize($ff-ink-70, 0.7);
      }

      .tick-action:hover {
        background-color: transparentize($pocket-aqua, 0.4);
      }

      .delete-action:hover {
        background-color: transparentize($pocket-red, 0.4);
      }
    }
  }
}

$top-actions-height: 2.2rem;

.search-no-results {
  flex: 1;

  width: 100%;
  margin: 0;
  padding-top: 2rem;
  text-align: center;

  font-size: 1.5rem;
  font-weight: bold;
  color: $ff-grey-80;
}

.top-actions {
  flex: initial;

  display: flex;
  flex-direction: row;
  align-items: center;

  height: $top-actions-height;
  padding: 0.4rem 0;

  background-color: $ff-ink-90;
  background-color: $my-dark-blue;

  .top-icon {
    flex: initial;
    display: inline-block;
    cursor: pointer;
    font-size: 1.9rem;
    color: white;

    opacity: 0.8;
    transition: opacity 200ms ease-out;

    width: 2rem;
    margin-right: 0.4rem;

    &:first-child {
      margin-left: 0.4rem;
    }

    &:hover {
      opacity: 1;
      transition: opacity 200ms ease-out;
    }

    &.random-item {
      font-weight: bold;
    }

    // This icon is separated from the other "item lists" action
    // hence a large right margin
    &.filter-faved {
      position: relative;

      &.on {
        .badge-on {
          display: block;
        }
      }
      &.off {
        .badge-off {
          display: block;
        }
      }

      .badge-wrapper {
        display: none;

        position: absolute;
        right: 0.2rem;
        bottom: 0.2rem;

        color: white;
        border-radius: 50% 50%;
        height: 1rem;
        width: 1rem;
        line-height: 1rem;
        font-size: 0.9rem;
        text-align: center;

        &.badge-on {
          background-color: $ff-green-60;
        }
        &.badge-off {
          background-color: $pocket-red;
        }
      }
    }
  }

  .filter-items-container {
    position: relative;
    flex: 1;
    margin-right: 2rem;

    .clear-search-box {
      position: absolute;
      top: -0.2rem;
      right: -1rem;
      color: black;
      opacity: 0.2;
      font-size: 2.2rem;
      cursor: pointer;
    }

    .filter-items {
      width: 100%;
      padding: 0.3rem 0.6rem;
      height: 1.6rem;

      background-color: transparentize(white, 0.3);
      border-radius: 1rem;
      border: 0px transparent;
      color: $ff-grey-80;
      font-size: 1.1rem;

      &:focus {
        outline: none;
      }
    }
  }
}

/*
 * Thanks to Che for this example: http://codepen.io/code_dependant/pen/ciGLA?editors=1100
 */
.main-loader {
  flex: initial;

  position: relative;
  top: -2px;
  height: 2px;
  width: 100%;
  background-color: transparent;

  &.loading:after {
    content: "";
    position: absolute;
    display: block;
    height: 100%;
    background-color: $pocket-aqua;
    left: 0%;
    right: 100%;

    animation: linear-loading 1.2s ease infinite;
  }
}

.flash-overlay {
  flex: initial;

  z-index: 3;
  display: block !important;
  position: absolute;
  top: $top-actions-height;
  width: 100%;
  opacity: 1;
  transition: height 200ms ease-out, opacity 200ms ease-out;

  padding: 1rem;

  font-size: 1.2rem;
  line-height: 1.4;
  text-align: center;

  &.error {
    background-color: transparentize($ff-red-50, 0.1);
    color: white;
  }
  &.notice {
    background-color: transparentize($notice-blue, 0.1);
    color: $ff-grey-80;
  }
  &.success {
    background-color: transparentize($ff-green-60, 0.2);
    color: $ff-grey-80;
  }

  &.hidden {
    // Needed to counter the 'display:none' of the .hidden class. Without this, the overlay
    // display goes from block to none, and is hidden all at once
    display: block !important;

    height: 0px;
    opacity: 0;
    transition: height 250ms ease-out, opacity 0 250ms ease-out;

    // Let's make sure the item really takes no space in the popup, or it will
    // prevent clicking on the first item of the list
    padding: 0px;
    line-height: 0;
  }
}

.pagination {
  flex: initial;

  z-index: 2;
  height: 30px;
  line-height: 30px;
  display: flex;
  flex-direction: row;

  font-weight: bold;
  color: $ff-grey-80;

  .pagination-previous,
  .pagination-next {
    flex: 1;
    text-align: center;
    cursor: pointer;

    &:hover {
      background-color: $ff-grey-20;
    }

    &.disabled,
    &.disabled:hover {
      opacity: 0.4;
    }
  }

  .pagination-page-selector {
    // On popup opening, the selector is hidden
    display: none;

    flex: initial;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    text-align: center;
  }
}

// -----------------------

// Dealing with the popup width in case it's pinned to overflow menu
// Apparently, overflow menu width must be around 425px atm

@media (max-width: 400px) {
  html,
  body {
    max-width: 100%;
  }
}
